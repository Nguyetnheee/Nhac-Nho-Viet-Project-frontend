{"ast":null,"code":"var _jsxFileName = \"D:\\\\UNIVERSITY\\\\FALL 25\\\\ISP392\\\\FINAL PROJECT\\\\frontend_new\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { fetchCustomerProfile, fetchStaffProfile } from '../services/apiAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const tokenFromStorage = localStorage.getItem('token');\n  const roleFromStorage = localStorage.getItem('role');\n  const [token, setToken] = useState(tokenFromStorage || null);\n  useEffect(() => {\n    const initializeAuth = async () => {\n      if (tokenFromStorage) {\n        api.defaults.headers.common['Authorization'] = `Bearer ${tokenFromStorage}`;\n        if (window.location.pathname !== '/login' && window.location.pathname !== '/register') {\n          try {\n            await fetchUserProfile(roleFromStorage);\n          } catch (error) {\n            var _error$response, _error$response2;\n            console.error('Error during auth initialization:', error);\n            // Only logout if it's a true auth error\n            if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 403) {\n              logout();\n            }\n          }\n        }\n      } else {\n        setLoading(false);\n      }\n    };\n    initializeAuth();\n  }, [tokenFromStorage]);\n\n  // Fetch profile theo role\n  const fetchUserProfile = async role => {\n    try {\n      const data = role === 'STAFF' ? await fetchStaffProfile() : await fetchCustomerProfile();\n      setUser(data);\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Gộp login (tự phân biệt STAFF / CUSTOMER)\n  const login = async (username, password) => {\n    try {\n      // Thử login Customer trước\n      let response;\n      try {\n        response = await api.post('/api/customer/login', {\n          username,\n          password\n        });\n      } catch (err) {\n        // Nếu thất bại, thử login Staff\n        response = await api.post('/api/staff/login', {\n          username,\n          password\n        });\n      }\n      const {\n        token: jwtToken,\n        role,\n        username: name,\n        email\n      } = response.data;\n\n      // Lưu thông tin vào localStorage\n      setToken(jwtToken);\n      localStorage.setItem('token', jwtToken);\n      localStorage.setItem('role', role);\n      api.defaults.headers.common['Authorization'] = `Bearer ${jwtToken}`;\n\n      // Fetch profile tương ứng\n      await fetchUserProfile(role);\n      return {\n        success: true,\n        role\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Login error:', error);\n      return {\n        success: false,\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Đăng nhập thất bại'\n      };\n    }\n  };\n\n  // Đăng ký (customer)\n  const register = async userData => {\n    try {\n      await api.post('/api/auth/register', userData);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      return {\n        success: false,\n        error: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Đăng ký thất bại'\n      };\n    }\n  };\n\n  // Cập nhật profile dựa vào role\n  const updateProfile = async profileData => {\n    try {\n      const role = localStorage.getItem('role');\n      const endpoint = role === 'STAFF' ? '/api/staff/profile' : '/api/customer/profile';\n      const response = await api.put(endpoint, profileData);\n      setUser(response.data);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      return {\n        success: false,\n        error: ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Cập nhật thất bại'\n      };\n    }\n  };\n\n  // Đăng xuất\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n    delete api.defaults.headers.common['Authorization'];\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    // chỉ 1 hàm login duy nhất\n    register,\n    logout,\n    updateProfile,\n    isAuthenticated: !!user,\n    role: roleFromStorage\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"oS22D9RvT/t1Y3qZUhWlCtS/OCY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","fetchCustomerProfile","fetchStaffProfile","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","tokenFromStorage","localStorage","getItem","roleFromStorage","token","setToken","initializeAuth","defaults","headers","common","window","location","pathname","fetchUserProfile","error","_error$response","_error$response2","console","response","status","logout","role","data","login","username","password","post","err","jwtToken","name","email","setItem","success","_error$response3","_error$response3$data","message","register","userData","_error$response4","_error$response4$data","updateProfile","profileData","endpoint","put","_error$response5","_error$response5$data","removeItem","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/UNIVERSITY/FALL 25/ISP392/FINAL PROJECT/frontend_new/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport api from '../services/api';\r\nimport { fetchCustomerProfile, fetchStaffProfile } from '../services/apiAuth';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const tokenFromStorage = localStorage.getItem('token');\r\n  const roleFromStorage = localStorage.getItem('role');\r\n  const [token, setToken] = useState(tokenFromStorage || null);\r\n\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      if (tokenFromStorage) {\r\n        api.defaults.headers.common['Authorization'] = `Bearer ${tokenFromStorage}`;\r\n        if (window.location.pathname !== '/login' && window.location.pathname !== '/register') {\r\n          try {\r\n            await fetchUserProfile(roleFromStorage);\r\n          } catch (error) {\r\n            console.error('Error during auth initialization:', error);\r\n            // Only logout if it's a true auth error\r\n            if (error.response?.status === 401 || error.response?.status === 403) {\r\n              logout();\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeAuth();\r\n  }, [tokenFromStorage]);\r\n\r\n  // Fetch profile theo role\r\n  const fetchUserProfile = async (role) => {\r\n    try {\r\n      const data =\r\n        role === 'STAFF'\r\n          ? await fetchStaffProfile()\r\n          : await fetchCustomerProfile();\r\n      setUser(data);\r\n    } catch (error) {\r\n      console.error('Error fetching user profile:', error);\r\n      logout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Gộp login (tự phân biệt STAFF / CUSTOMER)\r\n  const login = async (username, password) => {\r\n    try {\r\n      // Thử login Customer trước\r\n      let response;\r\n      try {\r\n        response = await api.post('/api/customer/login', { username, password });\r\n      } catch (err) {\r\n        // Nếu thất bại, thử login Staff\r\n        response = await api.post('/api/staff/login', { username, password });\r\n      }\r\n\r\n      const { token: jwtToken, role, username: name, email } = response.data;\r\n\r\n      // Lưu thông tin vào localStorage\r\n      setToken(jwtToken);\r\n      localStorage.setItem('token', jwtToken);\r\n      localStorage.setItem('role', role);\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${jwtToken}`;\r\n\r\n      // Fetch profile tương ứng\r\n      await fetchUserProfile(role);\r\n\r\n      return { success: true, role };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Đăng nhập thất bại',\r\n      };\r\n    }\r\n  };\r\n\r\n  // Đăng ký (customer)\r\n  const register = async (userData) => {\r\n    try {\r\n      await api.post('/api/auth/register', userData);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Đăng ký thất bại',\r\n      };\r\n    }\r\n  };\r\n\r\n  // Cập nhật profile dựa vào role\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const role = localStorage.getItem('role');\r\n      const endpoint = role === 'STAFF' ? '/api/staff/profile' : '/api/customer/profile';\r\n      const response = await api.put(endpoint, profileData);\r\n      setUser(response.data);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Cập nhật thất bại',\r\n      };\r\n    }\r\n  };\r\n\r\n  // Đăng xuất\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('role');\r\n    delete api.defaults.headers.common['Authorization'];\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    login, // chỉ 1 hàm login duy nhất\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    isAuthenticated: !!user,\r\n    role: roleFromStorage,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}